name: Push
on:
  pull_request:
    push:
      branches:
        - main
env:
  RUST_BACKTRACE: 1

jobs:
  fmt:
    name: Fmt Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features

  test-package:
    name: Test Package ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  test-package-macos_m1:
    name: Test Package macOS M1
    runs-on: macos-latest
    steps:
      - name: Xcode Select
        uses: devbotsxyz/xcode-select@v1.1.0

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: aarch64-apple-darwin
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: m1-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            m1-cargo-

      - name: Test
        run: |
          SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path) \
          MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version) \
          cargo test --all
